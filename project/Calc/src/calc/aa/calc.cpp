///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : calc.cpp
/// SOFTWARE COMPONENT NAME           : Calc
/// GENERATED DATE                    : 2024-11-14 15:25:13
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "calc/aa/calc.h"
 
namespace calc
{
namespace aa
{
 
Calc::Calc()
    : m_logger(ara::log::CreateLogger("CALC", "SWC", ara::log::LogLevel::kVerbose))
    , m_workers(3)
{
}
 
Calc::~Calc()
{
}
 
bool Calc::Initialize()
{
    m_logger.LogVerbose() << "Calc::Initialize";
    
    bool init{true};
    
    m_ControlData = std::make_shared<calc::aa::port::ControlData>();
    m_RawData = std::make_shared<calc::aa::port::RawData>();
    
    return init;
}
 
void Calc::Start()
{
    m_logger.LogVerbose() << "Calc::Start";
    
    m_ControlData->Start();
    m_RawData->Start();
    
    // run software component
    Run();
}
 
void Calc::Terminate()
{
    m_logger.LogVerbose() << "Calc::Terminate";
    
    m_ControlData->Terminate();
    m_RawData->Terminate();
}
 
void Calc::Run()
{
    m_logger.LogVerbose() << "Calc::Run";
    
    m_workers.Async([this] { m_ControlData->SendEventCEventCyclic(); });
    m_workers.Async([this] { m_RawData->ReceiveEventREventCyclic(); });
    m_workers.Async([this] { m_RawData->ReceiveFieldRFieldCyclic(); });
    
    m_workers.Wait();
}
 
} /// namespace aa
} /// namespace calc
