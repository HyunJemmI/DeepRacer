///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : simulator.cpp
/// SOFTWARE COMPONENT NAME           : Simulator
/// GENERATED DATE                    : 2024-11-04 08:32:44
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "simulator/aa/simulator.h"
 
namespace simulator
{
namespace aa
{
 
Simulator::Simulator()
    : m_logger(ara::log::CreateLogger("SIMT", "SWC", ara::log::LogLevel::kVerbose))
    , m_workers(2)
{
}
 
Simulator::~Simulator()
{
}
 
bool Simulator::Initialize()
{
    m_logger.LogVerbose() << "Simulator::Initialize";
    
    bool init{true};
    
    m_InferenceData = std::make_shared<simulator::aa::port::InferenceData>();
    m_SimulationData = std::make_shared<simulator::aa::port::SimulationData>();
    
    return init;
}
 
void Simulator::Start()
{
    m_logger.LogVerbose() << "Simulator::Start";
    
    m_InferenceData->Start();
    m_SimulationData->Start();
    
    // run software component
    Run();
}
 
void Simulator::Terminate()
{
    m_logger.LogVerbose() << "Simulator::Terminate";
    
    m_InferenceData->Terminate();
    m_SimulationData->Terminate();
}
 
void Simulator::Run()
{
    m_logger.LogVerbose() << "Simulator::Run";
    
    m_workers.Async([this] { m_InferenceData->ReceiveEventIEventCyclic(); });
    m_workers.Async([this] { m_SimulationData->SendEventSEventCyclic(); });
    
    m_workers.Wait();
}
 
} /// namespace aa
} /// namespace simulator
